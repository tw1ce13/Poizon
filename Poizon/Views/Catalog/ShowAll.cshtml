@using Poizon.Domain.ViewModel;
@model CatalogFilters
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Каталог";
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<div class="contenter">
    <div class="rectangle-2" style="margin-top: 5vh;">
        <div class="container">
            <h1 class="about-store">Каталог</h1>
            <div class="line-1"></div>
        </div>
    </div>
    <main>
        <div class="select-wrapper">
            <div class="filter">
                <select id="category">
                    <option value="">Выберите категорию</option>
                    @foreach (var item in ViewBag.Category)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
            </div>

            <div class="filter">
                <select id="subcategory" data-url="@Url.Action("GetSubcategories", "Catalog")">
                    <option value="">Выберите</option>
                </select>

            </div>
            <div class="filter">
                <select id="subsubcategory" data-url="@Url.Action("GetSubSubCategories", "Catalog")">
                    <!-- Опции для подподкатегорий -->
                    <option value="">Выберите</option>
                </select>
            </div>
            <div class="filter">
                <select id="brand">
                    <!-- Опции для брендов -->
                    <option value="">Выберите бренд</option>
                    @foreach (var item in ViewBag.Brand)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                    <!-- Добавьте больше опций по мере необходимости -->
                </select>
            </div>
            <div class="filter">
                <select id="style">
                    <!-- Опции для стилей -->
                    <option value="">Выберите стиль</option>
                    @foreach (var item in ViewBag.Style)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
            </div>
            <div class="filter">
                <select id="gender">
                    <!-- Опции для полов одежды -->
                    <option value="">Выберите пол</option>
                    @foreach (var item in ViewBag.Sex)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                    <!-- Добавьте больше опций по мере необходимости -->
                </select>
            </div>
        </div>

        <section class="product-list">
            @foreach (var item in ViewBag.Data)
            {
                <a href="@Url.Action("ProductDetails", "Catalog", new { id = item.Id })" class="product-a">
                    <div class="product">
                        @{
                            string base64Image = Convert.ToBase64String(item.Photo);
                            string imageSrc = string.Format("data:image/png;base64,{0}", base64Image);
                        }
                        <img src="@imageSrc" alt="Product 1">
                        <h3>@item.SubSubCategoryName</h3>
                        <p>@item.BrandName</p>
                        <span class="price">@item.Price ₽</span>
                    </div>
                </a>
            }
        </section>
    </main>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>$(document).ready(function () {
    $("#category").change(function () {
            var categoryId = $(this).val();
            var subcategorySelect = $("#subcategory");
            subcategorySelect.empty();

            if (categoryId !== "") {
                var url = subcategorySelect.data("url");
                $.ajax({
                    url: url,
                    type: "GET",
                    data: { categoryId: categoryId },
                    dataType: "json",
                    success: function (data) {
                        data.forEach(function (item) {
                            subcategorySelect.append($("<option>", {
                                value: item.id,
                                text: item.name
                            }));
                        });
                        applyFilters();
                    },
                    error: function () {
                        console.error("Ошибка при загрузке подкатегорий.");
                    }
                });
            }
        });

    $("#category").change(function () {
        var subCategoryId = $(this).val();
        var subsubcategorySelect = $("#subsubcategory");
        subsubcategorySelect.empty();

        if (subCategoryId !== "") {
            var url = subsubcategorySelect.data("url");
            $.ajax({
                url: url,
                type: "GET",
                data: { subCategoryId: subCategoryId },
                dataType: "json",
                success: function (data) {
                    data.forEach(function (item) {
                        subsubcategorySelect.append($("<option>", {
                            value: item.id,
                            text: item.name
                        }));
                    });
                    applyFilters();
                },
                error: function () {
                    console.error("Ошибка при загрузке подкатегорий.");
                }
            });
        }
    });
    function applyFilters() {
            var categoryId = $("#category").val();
            var subcategoryId = $("#subcategory").val();
            var subsubcategoryId = $("#subsubcategory").val();
            var brandId = $("#brand").val();
            var styleId = $("#style").val();
            var genderId = $("#gender").val();

            // Create an object with the selected values
            var filters = {
                CategoryId: categoryId || 0,
                SubCategoryId: subcategoryId || 0,
                SubSubCategoryId: subsubcategoryId || 0,
                BrandId: brandId || 0,
                StyleId: styleId || 0,
                GenderId: genderId || 0
            };

            // Send the data to the server using AJAX
            $.ajax({
                url: "@Url.Action("ShowWithFilters", "Catalog")",
                type: "POST",
                data: JSON.stringify(filters), // Convert the object to JSON
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    // Update the product list with the filtered results
                    $(".product-list").html(data);
                },
                error: function () {
                    console.error("Error while applying filters.");
                }
            });
        }
    });</script>


<script>document.addEventListener('DOMContentLoaded', function () {
        var navItems = document.querySelectorAll('.nav-item');

        navItems.forEach(function (navItem) {
            var link = navItem.querySelector('.nav-link');
            var submenu = navItem.querySelector('.submenu');

            if (submenu) {
                link.addEventListener('click', function (event) {
                    event.preventDefault();
                    submenu.classList.toggle('show');
                });
            }
        });
    });</script>





<style>
    /* Общие стили для меню */
    .menu {
        list-style: none;
        padding: 0;
    }

    .nav-item {
        margin-bottom: 10px;
    }

    .nav-link {
        display: block;
        color: #333;
        font-size: 20px;
        font-family: "Grotesk";
        font-weight: bold;
        text-decoration: none;
        padding: 10px 0;
    }

    .submenu {
        list-style: none;
        padding-left: 20px;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.3s ease-out;
    }

    .submenu-item {
        margin-bottom: 5px;
    }

    .submenu-link {
        display: block;
        color: #555;
        font-size: 16px;
        font-family: "Grotesk";
        text-decoration: none;
    }

    .show {
        max-height: 500px; /* Укажите максимальную высоту, достаточную для отображения всех пунктов подменю */
        transition: max-height 0.9s ease-in;
    }

    .select-wrapper {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between; /* Добавим отступы между элементами с равными отступами от краев экрана */
        margin: 0 -5px; /* Добавим отрицательные отступы, чтобы скорректировать равномерное распределение элементов */
    }

    /* Стилизация элементов "select" */
    select {
        font-size: 16px; /* Размер шрифта */
        padding: 8px; /* Внутренний отступ */
        border: 1px solid #ccc; /* Граница */
        border-radius: 4px; /* Закругление углов */
        width: 200px; /* Ширина элемента */
        background-color: #fff; /* Цвет фона */
        color: #333; /* Цвет текста */
        margin: 5px; /* Добавим отступы между элементами */
    }

        /* Изменение стиля при наведении на элемент "select" */
        select:hover {
            border-color: #999; /* Цвет границы при наведении */
        }

        /* Изменение стиля при активации элемента "select" */
        select:focus {
            border-color: #555; /* Цвет границы при активации */
            outline: none; /* Убрать стандартное контурное событие фокуса */
        }

        /* Убрать стандартную стрелку выпадающего списка в Chrome и Safari */
        select::-webkit-outer-spin-button,
        select::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        /* Убрать стандартный стиль кнопки выпадающего списка в Firefox */
        select::-moz-focus-inner {
            border: 0;
        }

        /* Убрать стандартные стили для стрелки выпадающего списка в Firefox */
        select::after {
            content: '\f0d7'; /* Юникод-символ стрелки (можно заменить на другой символ) */
            font-family: FontAwesome; /* Использование шрифта FontAwesome (замените на свой шрифт) */
            position: absolute;
            right: 8px;
            top: 50%;
            transform: translateY(-50%);
            pointer-events: none; /* Скрыть элемент от событий мыши */
        }

        /* Стили для выпадающего списка */
        select option {
            font-size: 14px;
            padding: 8px;
            color: #333;
            background-color: #fff;
        }

            /* Изменение стиля при наведении на элемент списка */
            select option:hover {
                background-color: #f2f2f2;
            }
</style>